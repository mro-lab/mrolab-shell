# dig：プライベートドメインのレコード取得
function private_config {
    local domain="${1:?ERROR: require private domain.}"
    local record="${2:-TXT}"
    case "${record}" in
        TXT)    dig -t TXT   +short "${domain}" | tr -d '"'     ;;
        CNAME)  dig -t CNAME +short "${domain}" | sed 's/\.$//' ;;
    esac
}

# プライベートコンフィグがアクティブになるまで待つ
function wait_private_config {
    local domain="${1:?ERROR: require private domain.}"
    local retry="${2:-30}"
    local interval="${3:-10}"
    local info="${4:-}"
    for i in $(seq "${retry}"); do
        if [ -n "$(private_config ${domain})" ]; then
            return 0
        fi
        [ -n "${info}" ] && echo "INFO: WAIT: ${interval}sec: ${i}/${retry}: ${domain}"
        sleep "${interval}"
    done
    [ -n "${info}" ] && echo "ERROR: wait_private_config timeout. ${domain}"
    return 1    # タイムアウト
}

# github 資格情報ドメイン取得
function github_credential_domain {
    echo "github-crypted-credential.${SVC_TYPE}.${SVC_NAME}.config"
}

# github 資格情報取得
function github_credential {
    local crypted_credential="${1:-$(private_config $(github_credential_domain))}"
    local decrypted_key="${2:-${CRYPT_KEY:?ERROR: require decrypted key.}}"
    echo "${crypted_credential}" | decrypt "${decrypted_key}"
}

# github 資格情報のプライベートコンフィグ反映待ち
# 起動が速い時に DNS に伝搬しきる前に取得しにいってしまうケースを抑制
function wait_github_credential {
    wait_private_config "$(github_credential_domain)" "" "" "info"
}
